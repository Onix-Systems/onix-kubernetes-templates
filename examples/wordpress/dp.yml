apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    run: nginx
  name: __CI_PROJECT_NAME__-wp
  namespace: __NAMESPACE_NAME__
spec:
  replicas: 1
  selector:
    matchLabels:
      run: __CI_PROJECT_NAME__-wp
      app: __CI_PROJECT_NAME__-wp
  template:
    metadata:
      labels:
        run: __CI_PROJECT_NAME__-wp
        app: __CI_PROJECT_NAME__-wp
    spec:
      containers:
      - name: __CI_PROJECT_NAME__-wp
        image: __REPOSITORY_IMAGE__
        ports:
        - containerPort: 80
        env:
        - name: WORDPRESS_DB_HOST
          value: __MYSQL_HOSTNAME__
        - name: WORDPRESS_DB_USER
          value: __MYSQL_USER__
        - name: WORDPRESS_DB_PASSWORD
          value: __MYSQL_PASSWORD__
        - name: WORDPRESS_DB_NAME
          value: __MYSQL_DATABASE__
      imagePullSecrets:
      - name: gitlab-registry

---
kind: Service
apiVersion: v1
metadata:
  name: __CI_PROJECT_NAME__-wp-service
  namespace: __NAMESPACE_NAME__
spec:
  selector:
    app: __CI_PROJECT_NAME__-wp
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: __CI_PROJECT_NAME__-wp-ingress
  namespace: __NAMESPACE_NAME__
  annotations:
    ingress.kubernetes.io/ssl-redirect: "true"
    kubernetes.io/tls-acme: "true"
    certmanager.k8s.io/cluster-issuer: letsencrypt-staging
    kubernetes.io/ingress.class: "nginx"
spec:
  tls:
  - hosts:
    - __HOSTNAME__.staging.onix.ua
    secretName: ssl-cert
  rules:
  - host: __HOSTNAME__.staging.onix.ua
    http:
      paths:
      - backend:
          serviceName: __CI_PROJECT_NAME__-wp-service
          servicePort: 80
